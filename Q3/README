How to build:
        * Run make in the current directory. This will build the executables for server and client both
                $ make -j

How to clean built files:
        * Run make clean
                $ make clean

How to run:
        * On the server side:
                * First build the code by running make
                        $ make -j
                * Then run the server executable with the first argument as the port to be used and the second argument as the file to dump the data in
                        $ ./server <port> <file>
        * On the client side:
                * First build the code by running make
                        $ make -j
                * Then run the client executable with the first argument as the IP address of the server and the second argument as the port
                        $ ./client <IP> <port>

Tested on:
        * Linux kernel version: 6.1.12-arch1-1
        * GLibc version: 2.37

Note: The generated CSV files are named wired.csv and wireless.csv. The latency is in microseconds.

Testing methodology:
        1. Wireless
                * I created a hotspot on my phone and connected both the systems to it.
                * There was no other device connected to the hotspot.
                * My phone and both the systems were placed near each other withing the radius of approximately 1 meter.
        2. Wired
                * I directly connected both the systems with a LAN cable without any switch/router in between.
                * The length of the ethernet cable was approximately 2 meters.

References:
        * https://www.geeksforgeeks.org/socket-programming-cc/
        * https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html
        * https://stackoverflow.com/questions/16275444/how-to-print-time-difference-in-accuracy-of-milliseconds-and-nanoseconds-from-c
        * https://stackoverflow.com/questions/5833094/get-a-timestamp-in-c-in-microseconds
        * https://man7.org/linux/man-pages/man2/settimeofday.2.html
        * https://www.gta.ufrj.br/ensino/eel878/sockets/sockaddr_inman.html
        * https://www.tutorialspoint.com/c_standard_library/c_function_strtoul.htm
        * https://linux.die.net/man/3/htons
        * https://man7.org/linux/man-pages/man3/inet_pton.3.html
        * https://man7.org/linux/man-pages/man2/connect.2.html
        * https://man7.org/linux/man-pages/man2/send.2.html
        * https://stackoverflow.com/questions/19472546/implicit-declaration-of-function-close
        * https://stackoverflow.com/questions/39002052/how-i-can-print-to-stderr-in-c
        * https://stackoverflow.com/questions/16508685/understanding-inaddr-any-for-socket-programming
        * https://man7.org/linux/man-pages/man2/accept.2.html
        * https://man7.org/linux/man-pages/man2/read.2.html
        * https://man7.org/linux/man-pages/man2/shutdown.2.html
        * https://man7.org/linux/man-pages/man7/ip.7.html
        * https://linuxhint.com/write-file-c/
        * https://man7.org/linux/man-pages/man3/fopen.3.html
        * https://askubuntu.com/questions/22835/how-to-network-two-ubuntu-computers-using-ethernet-without-a-router
